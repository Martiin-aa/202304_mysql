-- Muestra los usuarios
SELECT * FROM usuarios;
-- Muestra las amistades
SELECT * FROM amistades;
-- Consulta: crea 6 usuarios nuevos
INSERT INTO
	usuarios ( nombre, apellido, created_at, updated_at)
VALUES 
	('Martin', 'Araya', NOW(), NOW()),
    ('Alexander', 'Vera', NOW(), NOW()),
    ('Bruno', 'Galaz', NOW(), NOW()),
    ('Vicho', 'Rodriguez', NOW(), NOW()), 
    ('Martin', 'Riquelme', NOW(), NOW()),
    ('Cristobal', 'Gonzales', NOW(), NOW());
-- Consulta: haz que el usuario 1 sea amigo del usuario 2, 4 y 6
-- Consulta: haz que el usuario 2 sea amigo del usuario 1, 3 y 5
-- Consulta: haz que el usuario 3 sea amigo del usuario 2 y 5
-- Consulta: haz que el usuario 4 sea amigo del usuario 3
-- Consulta: haz que el usuario 5 sea amigo del usuario 1 y 6
-- Consulta: haz que el usuario 6 sea amigo del usuario 2 y 3
INSERT INTO amistades (usuario_id, amigo_id)
VALUES
	(1,2), (1,2), (1,4), (1,6),
    (2,1), (2,3), (2,5),
    (3,2), (3,5),
    (4,3),
    (5,1), (1,6),
    (6,2), (6,3);
-- Consulta: muestra las relaciones creadas como se muestra en la imagen de arriba
SELECT 
    usuarios.nombre,
    usuarios.apellido,
    usuarios2.nombre AS nombre_amigo,
    usuarios2.apellido AS apellido_amigo
FROM
    usuarios
        JOIN
    amistades ON usuarios.id = amistades.usuario_id
        LEFT JOIN
    usuarios AS usuarios2 ON usuarios2.id = amistades.amigo_id;
-- Consulta NINJA: Devuelve todos los usuarios que son amigos del primer usuario,
-- aseg√∫rate de que sus nombres se muestren en los resultados.
SELECT usuarios.nombre FROM usuarios
WHERE
    usuarios.id IN (
        SELECT
            amistades.amigo_id
        FROM
            amistades
        WHERE
            amistades.usuario_id = 1
    );
-- Consulta NINJA: Devuelve el recuento de todas las amistades
SELECT COUNT(amigo_id) AS Total_Amigos FROM amistades;
